<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from smshub/xml/schema/CRM/Smshub/SmsMessage.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:e069377ea790377e4e4de1fc626967b4)
 */
use CRM_Smshub_ExtensionUtil as E;

/**
 * Database access object for the SmsMessage entity.
 */
class CRM_Smshub_DAO_SmsMessage extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_sms_message';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique SmsMessage ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * Mailing ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $mailing_id;

  /**
   * Message ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $message_id;

  /**
   * Contact ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $contact_id;

  /**
   * Message to send
   *
   * @var string
   *   (SQL type: text)
   *   Note that values will be retrieved from the database as a string.
   */
  public $message;

  /**
   * Phone number
   *
   * @var string
   *   (SQL type: text)
   *   Note that values will be retrieved from the database as a string.
   */
  public $number;

  /**
   * Already send?
   *
   * @var bool|string|null
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_send;

  /**
   * When send
   *
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $date_send;

  /**
   * Already delivered?
   *
   * @var bool|string|null
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_delivered;

  /**
   * When delivered
   *
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $date_delivered;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_sms_message';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Sms Messages') : E::ts('Sms Message');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique SmsMessage ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sms_message.id',
          'table_name' => 'civicrm_sms_message',
          'entity' => 'SmsMessage',
          'bao' => 'CRM_Smshub_DAO_SmsMessage',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'mailing_id' => [
          'name' => 'mailing_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Mailing ID'),
          'description' => E::ts('Mailing ID'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sms_message.mailing_id',
          'table_name' => 'civicrm_sms_message',
          'entity' => 'SmsMessage',
          'bao' => 'CRM_Smshub_DAO_SmsMessage',
          'localizable' => 0,
          'add' => NULL,
        ],
        'message_id' => [
          'name' => 'message_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Message ID'),
          'description' => E::ts('Message ID'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sms_message.message_id',
          'table_name' => 'civicrm_sms_message',
          'entity' => 'SmsMessage',
          'bao' => 'CRM_Smshub_DAO_SmsMessage',
          'localizable' => 0,
          'add' => NULL,
        ],
        'contact_id' => [
          'name' => 'contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Contact ID'),
          'description' => E::ts('Contact ID'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sms_message.contact_id',
          'table_name' => 'civicrm_sms_message',
          'entity' => 'SmsMessage',
          'bao' => 'CRM_Smshub_DAO_SmsMessage',
          'localizable' => 0,
          'add' => NULL,
        ],
        'message' => [
          'name' => 'message',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Message'),
          'description' => E::ts('Message to send'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sms_message.message',
          'table_name' => 'civicrm_sms_message',
          'entity' => 'SmsMessage',
          'bao' => 'CRM_Smshub_DAO_SmsMessage',
          'localizable' => 0,
          'add' => NULL,
        ],
        'number' => [
          'name' => 'number',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Number'),
          'description' => E::ts('Phone number'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sms_message.number',
          'table_name' => 'civicrm_sms_message',
          'entity' => 'SmsMessage',
          'bao' => 'CRM_Smshub_DAO_SmsMessage',
          'localizable' => 0,
          'add' => NULL,
        ],
        'is_send' => [
          'name' => 'is_send',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Send'),
          'description' => E::ts('Already send?'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sms_message.is_send',
          'default' => '0',
          'table_name' => 'civicrm_sms_message',
          'entity' => 'SmsMessage',
          'bao' => 'CRM_Smshub_DAO_SmsMessage',
          'localizable' => 0,
          'add' => NULL,
        ],
        'date_send' => [
          'name' => 'date_send',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Date Send'),
          'description' => E::ts('When send'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sms_message.date_send',
          'default' => 'null',
          'table_name' => 'civicrm_sms_message',
          'entity' => 'SmsMessage',
          'bao' => 'CRM_Smshub_DAO_SmsMessage',
          'localizable' => 0,
          'add' => NULL,
        ],
        'is_delivered' => [
          'name' => 'is_delivered',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Delivered'),
          'description' => E::ts('Already delivered?'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sms_message.is_delivered',
          'default' => '0',
          'table_name' => 'civicrm_sms_message',
          'entity' => 'SmsMessage',
          'bao' => 'CRM_Smshub_DAO_SmsMessage',
          'localizable' => 0,
          'add' => NULL,
        ],
        'date_delivered' => [
          'name' => 'date_delivered',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Date Delivered'),
          'description' => E::ts('When delivered'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sms_message.date_delivered',
          'default' => 'null',
          'table_name' => 'civicrm_sms_message',
          'entity' => 'SmsMessage',
          'bao' => 'CRM_Smshub_DAO_SmsMessage',
          'localizable' => 0,
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'sms_message', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'sms_message', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
